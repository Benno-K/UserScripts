#!/bin/bash
##
# Author: Benno K.
# Email: benno@xyz.de
# Github: https://www.github.com/Benno-K
# 
# This script is available for
# public use under GPL V3 (see
# file LICENSE)
##

# Modes: mail,track,trackwithlog,both
mode=mail
# Read log from file or FB
logfromfile=1
# Source personal information
# used for mailing provider
personal=~/.fbdowntrack.personal-data
# where to store track info
trackdir=~/fblogs/tracked
# search which (year's) log
log2search="/home/pi/fblogs/fblog-$(date +%Y).log"

# Source personal data here
. $personal

# Make sure German umlauts get a usable encoding
export LANG=POSIX
export LC_CTYPE=en_US.UTF-8

reportday=$(date -d yesterday +%F)
while [ "${1:0:1}" = "-" ]
  do
  if [[ "$1" =~ "=" ]];then
    echo "option must not and cannot contain an equal-sign (÷)" >&2
    echo "option \"$1\" is invalid" >&2
    exit 4
  fi
  candidate=$1
  toparse=$1
  shift
  
  if [ "$candidate" == "-takelogfrombox" ]; then
    logfromfile=0
    continue
  fi
  if [ "$candidate" = "-today" ]; then
    reportday=$(date +%F)
    continue
  fi
  if [ "$candidate" = "-trackdir" ]; then
    trackdir="$1"
    shift
    continue
  fi
  if [ "$candidate" = "-mode" ]; then
    mode="$1"
    shift
    continue
  fi
  if [ "${candidate:0:2}" = "-h" ]; then
    cat <<EOI|less
Usage:
$0 [options] [YYYY-MM-DD]
  where YYYY-MM-DD specifies
  which day's log messages
  you want to be checked,
  defaults to yesterday.

  Options:
    -mode
      specify one of 
        both
        track
	trackwithlog
        mail
     defaults to both
   -trackdir
      specify where
      trackfiles are stored
   -today
      use today as date
   -takelogfrombox
     retrieve log directly
     from FRITZ!box
EOI
    exit
  fi
  if [ "$1" = "$toparse" ];then
    echo "invalid option: $1"  >&2
    exit 2
  fi
  done

if [ "$1" != "" ];then
  reportday=$1
  tracklog=$trackdir/$reportday.txt
  shift
fi

log2search="/home/pi/fblogs/fblog-$(date -d $reportday +%Y).log"
#cat <<EOI
###DBG: debug exit
#  mode=$mode
#  trackdir=$trackdir
#  tracklog=$tracklog
#  logfromfile=$logfromfile
#  reportday=$reportday
#EOI
#exit 9999

if [ ! -d "$trackdir" ];then
	echo "Directory for logfiles (${trackdir}) not accessible" >&2
  exit 2
fi

if [ "$mode" = "trackwithlog" ];then
  includelog=1
else
  includelog=0
fi

if [ -r ~/fbdownremarks.txt ]; then
  remarks=$(cat ~/fbdownremarks.txt)
else
  remarks=
fi
# Set path
export PATH=/home/pi/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

# No need to change below this comment
priortickets=$HOME/fbpriortickets.txt
# For the time being ignore prior tickets
rm -f ${priortickets}

function priortext {
  actual=1
  if [ -s $1 ]; then
    read -d '-' void firstref rest <<< $(head -1 $1)
    read priorcount rest <<<$(wc -l $1)
    firstdate="${firstref:4:2}.${firstref:2:2}.20${firstref:0:2}"
    let actual=$priorcount+1
    cat <<-EOI

Dies ist die $actual. Störung seit dem $firstdate.
Bisherige Tickets:
EOI
    cat $1
  fi
  thisday=$(date +"%y%m%d")
  printf "[Vorgang: %s-Kardel-%04d] (Ticket-ID noch nicht erhalten bzw. eingetragen)\n" $thisday $actual >> $1
}

function logread {
	fblogread $(date -d $1 +"-s %d.%m.%y/00:00:00 -b %d.%m.%y/23:59:59")
}

function logreadfromfile {
        fritzdate=${1:8:2}.${1:5:2}.${1:2:2}
	if [ "$1" != "" ];then
          grep "^$fritzdate" "$log2search"
	else
	  thisdate=$(date +"%d.%m.%y")
          fritzdate=${thisdate:8:2}.${thisdate:5:2}.${thisdate:2:2}
          grep "^$(date -d $1 +'%d.%m.%y')" "$log2search"
fi
}

if [ $logfromfile = 1 ];then
	text=$(logreadfromfile $reportday|fbdowntimestat.pl)
	complaints=$?
else
	text=$(logread $reportday|fbdowntimestat.pl)
	complaints=$?
fi

if [ $complaints -gt 0 ]; then
	# Störung or Störungen / trat or traten
  if [ $complaints -gt 1 ]; then
    en="en"
		ee="e"
  else
    en=""
		ee=""
  fi
  set 2>&1 > /tmp/fbset.log
  thisdate=$(date +"%d.%m.%y")
  if [ "$reportday" = "" ]; then
    fritzdate=${thisdate:8:2}.${thisdate:5:2}.${thisdate:2:2}
  else
    fritzdate=${reportday:8:2}.${reportday:5:2}.${reportday:2:2}
  fi
# Für CC unten einfügen
#-a "Cc: $from" \

	# Matches track and zrackwithlog
	if [ "${mode:0:5}" != "track" ];then
    if [ "$cc" = "" ];then
      ccoption=""
    else
#      ccoption='-a "Cc: '$cc'"'
      ccoption='-a "Cc: Benno.Kardel@web.de"'
    fi
    # While trying to figure
    # out how to omit the
    # Cc-header in this command
    # (in case $cc is undef.)
    # I wasted hours and did 
    # not find any solution.
    # However it turned out,
    # that the mail command is
    # smart enough to ignore
    # an empty Cc-header. So
    # if $cc is undefined
    # mail thankfully ignores
    # a "Cc: " header. Saved
    # by smarter programmer :-)
# CAUTION: subject MUST NOT
# contain any 8-bit characters
    cat <<EOI | \
mail \
-s "${fritzdate}: Problem$ee mit meinem DSL-Anschluss - Kundennummer 2201954816=" \
-a "Sender: $sender" \
-a "From: $from" \
-a "Cc: $cc" \
-a "Content-Type: text/plain; charset=utf-8" \
$mailto 
$(contractinfo)

Sehr geehrte Damen und Herren,

an meinem DSL-Anschluss trat$en folgende Störung$en auf:
$text $(priortext $priortickets) $remarks

Mit freundlichen Grüßen
Benno Kardel

PS.: Hier die FRITZbox Logdatei
$(logreadfromfile $reportday)

PPS.:  Diese E-Mail wurde automatisch erstellt.
EOI
  else
    cat <<EOI > $tracklog
${fritzdate}: Störung$en meines DSL-Anschlusses
$text $(priortext $priortickets) $remarks
EOI
    if [ "$includelog" = "1" ];then
      cat <<EOI >> $tracklog
FRITZbox Logdatei:
$(logreadfromfile $reportday)
EOI
    fi
  fi
fi

exit
